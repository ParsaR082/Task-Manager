# docker-compose.yml
version: '3.8'

services:
  mongo:
    image: mongo:6.0
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: taskmanager
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  web:
    build: .
    restart: unless-stopped
    env_file: .env
    expose:
      - "3000"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - app-network

  caddy:
    image: caddy:2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - CADDY_DOMAIN=${CADDY_DOMAIN:-103.75.197.66.sslip.io}
      - CADDY_EMAIL=${CADDY_EMAIL}
    depends_on:
      - web
    networks:
      - app-network

volumes:
  mongo_data:
  caddy_data:
  caddy_config:

networks:
  app-network:
    driver: bridge